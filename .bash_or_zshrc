#! /usr/bin/env bash
#
# Configuration that should be valid for use in either bash or zsh
#

# Utility function to wrap configuration options that depend on an installed executable
command_exists () {
    type "$1" &> /dev/null ;
}

# ------------------------------------------------------------------- #
# GPG
# ------------------------------------------------------------------- #
# *Maybe* Not needed after GnuPG 2.1.0 (https://juliansimioni.com/blog/troubleshooting-gpg-git-commit-signing/)
export GPG_TTY=$(tty)


# ------------------------------------------------------------------- #
# Homebrew
# ------------------------------------------------------------------- #
export PATH="/usr/local/sbin:$PATH"
export HOMEBREW_NO_ANALYTICS=1

# ------------------------------------------------------------------- #
# Sourcing related files
# ------------------------------------------------------------------- #
source $HOME/.aliases
# Untracked files that should always be sourced
[ -f $HOME/.secrets_and_keys ] && source $HOME/.secrets_and_keys
#[ -f $HOME/.zshrc_untracked  ] && source $HOME/.zshrc_untracked


# ------------------------------------------------------------------- #
# Vim
# ------------------------------------------------------------------- #
export EDITOR='vim'


# ------------------------------------------------------------------- #
# FZF
# ------------------------------------------------------------------- #
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --follow'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"


# ------------------------------------------------------------------- #
# Rust
# ------------------------------------------------------------------- #
[ -f $HOME/.cargo/env ] && source $HOME/.cargo/env


# ------------------------------------------------------------------- #
# asdf Package management (all frameworks)
# ------------------------------------------------------------------- #
# See: https://asdf-vm.com/#/core-manage-asdf-vm
if command_exists asdf
then
    source /usr/local/opt/asdf/asdf.sh  # (Inlined brew prefix for speed)
    # TODO: Use the zsh completions instead of just bash (though these work)
    source /usr/local/opt/asdf/etc/bash_completion.d/asdf.bash
fi


# ------------------------------------------------------------------- #
# Ruby
# ------------------------------------------------------------------- #
# (After `brew install ruby`)
export PATH="/usr/local/opt/ruby/bin:$PATH"
# (After `brew install rbenv`)
command_exists rbenv && eval "$(rbenv init - --no-rehash)"
# After `gem install --user-install`
export PATH="/Users/david/.gem/ruby/2.7.0/bin:$PATH"


# ------------------------------------------------------------------- #
# Python
# ------------------------------------------------------------------- #
export PATH="$HOME/.poetry/bin:$PATH"
export PATH="$HOME/.pyenv/bin:$PATH"
command_exists pyenv && eval "$(pyenv init - --no-rehash)"
command_exists pyenv && eval "$(pyenv virtualenv-init -)"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

export PIP_REQUIRE_VIRTUALENV=true
export PIPENV_VENV_IN_PROJECT=1


# ------------------------------------------------------------------- #
# Git
# ------------------------------------------------------------------- #
if command_exists delta
then
    export GIT_PAGER='delta --dark --width=variable'
elif command_exists diff-so-fancy
then
    export GIT_PAGER="diff-so-fancy | less --tabs=4 -RFX"
fi


# ------------------------------------------------------------------- #
# Tmux
# ------------------------------------------------------------------- #
export TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins"

# ------------------------------------------------------------------- #
# Direnv
# ------------------------------------------------------------------- #
# Silence the usual messages about `direnv: leading` and `direnv: export`
export DIRENV_LOG_FORMAT=

# ------------------------------------------------------------------- #
# JavaScript
# ------------------------------------------------------------------- #
export PATH="/usr/local/opt/node@14/bin:$PATH"

# ------------------------------------------------------------------- #
# Java
# ------------------------------------------------------------------- #
export PATH="/usr/local/opt/openjdk/bin:$PATH"
